#include<bits/stdc++.h>
#define ll long long
#define N '\n'
#define fastIO() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
 
ll seg[4 * 200005];
 
void build(ll ara[],ll ind,ll low,ll high)
{
    if(low == high)
    {
        seg[ind] = ara[low-1];
        return;
    }
    ll mid = (low + high) / 2;
    build(ara,2*ind,low,mid);
    build(ara,2*ind+1,mid+1,high);
    seg[ind] = seg[2*ind] + seg[2*ind+1];
    return;
}
 
ll query(ll ind,ll low,ll high,ll l,ll r)
{
    if((low >= l) && (high <= r))
    {
        return seg[ind];
    }
    else if((high < l) || (low > r))
    {
        return 0;
    }
    else
    {
        ll mid = (low+high) / 2;
        return query(2*ind,low,mid,l,r)+ query(2*ind+1,mid+1,high,l,r);
    }
}
 
ll update(ll ind,ll low,ll high,ll l,ll r,ll v)
{
    if((low >= l) && (high <= r))
    {
        return seg[ind] = v;
    }
    else if((high < l) || (low > r))
    {
        return seg[ind];
    }
    else
    {
        ll mid = (low+high) / 2;
        return seg[ind] = update(2*ind,low,mid,l,r,v)+ update(2*ind+1,mid+1,high,l,r,v);
    }
}
 
int main()
{
    ll n,i,j,s = 0,q,a,b,c;
    cin >> n >> q;
    ll ara[n];
    for(i = 0; i < n; i++)
    {
        cin >> ara[i];
    }
    build(ara,1,1,n);
    for(i = 0; i < q; i++)
    {
        cin >> c >> a >> b ;
        if(c == 2)
        {
            cout << query(1,1,n,a,b) << N;
        }
        else
        {
            update(1,1,n,a,a,b);
        }
    }
    return 0;
}
